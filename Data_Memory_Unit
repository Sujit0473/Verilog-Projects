// data_memory.v
`timescale 1ns / 1ps
module data_memory(
    input clk,
    input rst,
    input [4:0] addr,
    input [31:0] write_data,
    input sw,
    input [4:0] read_addr,
    output reg [31:0] read_data
);
    reg [31:0] memory [0:31];

    integer i;

    always @(posedge clk) begin
        if (rst) begin
            for(i = 0; i < 32; i = i + 1)
                memory[i] <= 32'd0;
        end else if (sw) begin
            memory[addr] <= write_data;
        end
    end

    always @(*) begin
        read_data = memory[read_addr];
    end

endmodule
